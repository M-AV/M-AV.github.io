<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Is this a blog?</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.m-a-v.dk/"/>
  <updated>2016-08-16T15:17:28.561Z</updated>
  <id>http://blog.m-a-v.dk/</id>
  
  <author>
    <name>Mikkel V.</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bank Grade Security - Danish bank edition v2</title>
    <link href="http://blog.m-a-v.dk/2016/02/03/Bank-Grade-Security-Danish-Edition-v2/"/>
    <id>http://blog.m-a-v.dk/2016/02/03/Bank-Grade-Security-Danish-Edition-v2/</id>
    <published>2016-02-02T23:00:00.000Z</published>
    <updated>2016-08-16T15:17:28.561Z</updated>
    
    <content type="html"><![CDATA[<p>In need of something better to do, I thought I would see if any of the Danish Banks have improved their SSL/TLS since <a href="!--￼0--">last summer</a>. Back then, we saw that the so called “bank grade”-security was generally not that good (at least in terms of SSL/TLS). The results were pretty much consistent with the rest of the world, which was kinda sad. But now we are in 2016, so let us see how the banks fare today.</p>
<p>I have tested all the banks I tested last time, as well as the ones <a href="https://jamiemagee.co.uk/2015/05/06/do-you-want-bank-grade-ssl-danish-edition/" title="Jamie Magee - Do -you really want &quot;bank grade&quot; security in your SSL? Danish edition" target="_blank" rel="external">Jamie Magee</a> tested and I did not. </p>
<table><thead><tr><th style="text-align: center">Bank</th><th style="text-align: center">Grade</th><th style="text-align: center">Supports SSL 3</th><th style="text-align: center">Supports SHA1</th><th style="text-align: center">No TLS 1.2</th><th style="text-align: center">Supports RC4</th><th style="text-align: center">Forward Secrecy</th><th style="text-align: center">POODLE</th></tr></thead><tbody><tr><td style="text-align: center; background-color:green; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=https%3A%2F%2Fjutlander-netbank.dk" title="SSLLabs - jutlander-netbank.dk" target="_blank" rel="external">Jutlander Bank</a></td><td style="text-align: center; background-color:green; color:white"><strong>A+</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:green; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=al-bank.dk" title="SSLLabs - al-bank.dk" target="_blank" rel="external">Arbejdernes Landsbank</a></td><td style="text-align: center; background-color:green; color:white"><strong>A</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:green; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=vestjyskbank.dk" title="SSLLabs - Vestjyskbank.dk" target="_blank" rel="external">Vestjysk Bank</a></td><td style="text-align: center; background-color:green; color:white"><strong>A</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:green; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=mitnykredit.dk" title="SSLLabs - mitnykredit.dk" target="_blank" rel="external">Nykredit</a></td><td style="text-align: center; background-color:green; color:white"><strong>A</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass<em></em></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:green; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=https%3A%2F%2Fnetbank.sparnord.dk" title="SSLLabs - netbank.sparnord.dk" target="_blank" rel="external">Spar Nord</a></td><td style="text-align: center; background-color:green; color:white"><strong>A</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:lawngreen; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=https%3A%2F%2Fwww.danskebank.dk" title="SSLLabs - www.danskebank.dk" target="_blank" rel="external">Danske Bank</a></td><td style="text-align: center; background-color:lawngreen; color:white"><strong>A-</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:lawngreen; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=portal.bankdata.dk" title="SSLLabs - portal.bankdata.dk" target="_blank" rel="external">Finansbanken</a></td><td style="text-align: center; background-color:lawngreen; color:white"><strong>A-</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:lawngreen; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=portal.jyskebank.dk" title="SSLLabs - portal.jyskebank.dk" target="_blank" rel="external">Jyske Bank</a></td><td style="text-align: center; background-color:lawngreen; color:white"><strong>A-</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:lawngreen; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=lsb.dk" title="SSLLabs - lsb.dk" target="_blank" rel="external">Lån &amp; Spar Bank</a></td><td style="text-align: center; background-color:lawngreen; color:white"><strong>A-</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:lawngreen; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=portal4.nordjyskebank.dk" title="SSLLabs - portal4.nordjyskebank.dk" target="_blank" rel="external">Nordjyske Bank</a></td><td style="text-align: center; background-color:lawngreen; color:white"><strong>A-</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:lawngreen; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=portal4.sydbank.dk" title="SSLLabs - portal4.sydbank.dk" target="_blank" rel="external">Sydbank</a></td><td style="text-align: center; background-color:lawngreen; color:white"><strong>A-</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:orange; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=dlr.dk" title="SSLLabs - www.dlr.dk" target="_blank" rel="external">DLR Kredit</a></td><td style="text-align: center; background-color:orange; color:white"><strong>C</strong></td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail<em>*</em></td></tr><tr><td style="text-align: center; background-color:orange; color:white"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=netbank.nordea.dk" title="SSLLabs - netbank.nordea.dk" target="_blank" rel="external">Nordea</a></td><td style="text-align: center; background-color:orange; color:white"><strong>C</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr></tbody></table>

<ul>
<li>*Intermediate certificate still supports SHA1  </li>
<li>**Only SSLv3 vulnerable to POODLE, not TLS</li>
</ul>
<p>Wow. What an improvement. Back in May, only one bank got an A- and it was the only one to get higher than a B. Now only two banks get less than an A- and there even is one getting an A+. Good job to the teams who have taken action to improve their security and kudos to Jutlander Bank for being the only bank in Denmark (I know about) with an A+ rating.</p>
<!-- Bibliography -->
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In need of something better to do, I thought I would see if any of the Danish Banks have improved their SSL/TLS since &lt;a href=&quot;!--￼0--&quot;&gt;l
    
    </summary>
    
    
      <category term="Security" scheme="http://blog.m-a-v.dk/tags/Security/"/>
    
      <category term="SSL" scheme="http://blog.m-a-v.dk/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>Bank Grade Security - Danish bank edition</title>
    <link href="http://blog.m-a-v.dk/2015/05/06/Bank-Grade-Security-Danish-Edition/"/>
    <id>http://blog.m-a-v.dk/2015/05/06/Bank-Grade-Security-Danish-Edition/</id>
    <published>2015-05-05T22:00:00.000Z</published>
    <updated>2016-08-16T15:18:08.479Z</updated>
    
    <content type="html"><![CDATA[<p>A few days ago, Troy Hunt published a <a href="http://www.troyhunt.com/2015/05/do-you-really-want-bank-grade-security.html" title="TroyHunt.com - Do you really want “bank grade” security in your SSL? Here’s how Aussie banks fare" target="_blank" rel="external">blog post</a> about various banks and their SSL. Using SSL Labs’ <a href="https://www.ssllabs.com/ssltest/" title="Qualys SSL LABS - SSL Server Test" target="_blank" rel="external">SSL Server Test</a>, he scanned a bunch of Australian banks’ websites and summarized the results. Interestingly, very few banks achieved “all green”. Most banks lack support for Forward Secrecy and many also still support the RC4 cipher suite. A few were even vulnerable to the <a href="https://en.wikipedia.org/wiki/POODLE" title="Wikipedia - POODLE" target="_blank" rel="external">POODLE</a> vulnerability. These results made me curious about how the Danish banks compare. </p>
<p>I threw a bunch of Danish bank URLs through the SSL Server Test and the results can be seen in the table below. It should be noted that I have taken the URL to the page displaying the <a href="https://en.wikipedia.org/wiki/NemID" title="Wikipedia - NemID" target="_blank" rel="external">NemID</a> login form (a common login platform used by all Danish banks).</p>
<p><strong>Update, 13 May</strong>: Finansbanken is no longer vulnerable to POODLE and is now supporting TLS 1.2. This improves their rating to <strong>B</strong>. </p>
<table><thead><tr><th style="text-align: center">Bank</th><th style="text-align: center">Grade</th><th style="text-align: center">Supports SSL 3</th><th style="text-align: center">Supports SHA1</th><th style="text-align: center">No TLS 1.2</th><th style="text-align: center">Supports RC4</th><th style="text-align: center">Forward Secrecy</th><th style="text-align: center">POODLE</th></tr></thead><tbody><tr><td style="text-align: center; background-color:lawngreen"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=https%3A%2F%2Fwww.danskebank.dk" title="SSLLabs - www.danskebank.dk" target="_blank" rel="external">Danske Bank</a></td><td style="text-align: center; background-color:lawngreen"><strong>A-</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:orange"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=vestjyskbank.dk" title="SSLLabs - Vestjyskbank.dk" target="_blank" rel="external">Vestjysk Bank</a></td><td style="text-align: center; background-color:orange"><strong>B</strong></td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:orange"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=https%3A%2F%2Fnetbank.sparnord.dk" title="SSLLabs - netbank.sparnord.dk" target="_blank" rel="external">Spar Nord</a></td><td style="text-align: center; background-color:orange"><strong>B</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass*</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:orange"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=https%3A%2F%2Fjutlander-netbank.dk" title="SSLLabs - jutlander-netbank.dk" target="_blank" rel="external">Jutlander Bank</a></td><td style="text-align: center; background-color:orange"><strong>B</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:orange"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=www.himmerland.dk" title="SSLLabs - www.himmerland.dk" target="_blank" rel="external">Himmerland.dk</a></td><td style="text-align: center; background-color:orange"><strong>B</strong></td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:orange"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=al-bank.dk" title="SSLLabs - al-bank.dk" target="_blank" rel="external">Arbejdernes Landsbank</a></td><td style="text-align: center; background-color:orange"><strong>B</strong></td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:orange"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=lsb.dk" title="SSLLabs - lsb.dk" target="_blank" rel="external">Lån &amp; Spar Bank</a></td><td style="text-align: center; background-color:orange;"><strong>B</strong></td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:green; color:white">Pass</td></tr><tr><td style="text-align: center; background-color:red"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=portal4.sydbank.dk" title="SSLLabs - portal4.sydbank.dk" target="_blank" rel="external">Sydbank</a></td><td style="text-align: center; background-color:red;"><strong>F</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td></tr><tr><td style="text-align: center; background-color:red"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=portal4.nrsbank.dk" title="SSLLabs - portal4.nrsbank.dk" target="_blank" rel="external">Nordjyske Bank</a></td><td style="text-align: center; background-color:red;"><strong>F</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td></tr><tr><td style="text-align: center; background-color:red"><a href="https://www.ssllabs.com/ssltest/analyze.html?d=portal.bankdata.dk" title="SSLLabs - portal.bankdata.dk" target="_blank" rel="external">Finansbanken</a></td><td style="text-align: center; background-color:red;"><strong>F</strong></td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:green; color:white">Pass</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td><td style="text-align: center; background-color:red; color:white">Fail</td></tr></tbody></table>

<ul>
<li>*Intermediate certificate still supports SHA1  </li>
</ul>
<p>Himmerland is actually the “old name” for Jutlander Bank, but it seems like it is <a href="https://www.himmerland.dk/netbank/adgang/logondanid/logondanid_bred/" title="www.himmerland.dk - Jutlander/Himmerland NemID login page" target="_blank" rel="external">still possible</a> to login to their online banking site from the old domain.</p>
<p>These results seem to be consistent with the Aussie banks in Troy Hunt’s post. </p>
<p>Other people had the same thought as I did after reading Troy’s post. Here is a list of posts with results from other countries:</p>
<p><em>Australian banks</em>: <a href="http://www.troyhunt.com/2015/05/do-you-really-want-bank-grade-security.html" title="TroyHunt.com - Do you really want “bank grade” security in your SSL? Here’s how Aussie banks fare" target="_blank" rel="external">Troy Hunt’s blog</a><br><em>Canadian banks</em>: <a href="http://blog.simontimms.com/2015/05/09/do-you-really-want-bank-grade-security-in-your-ssl/" title="Simon Online - Do you really want &quot;bank grade&quot; security in your SSL? Canadian edition" target="_blank" rel="external">Simon Timm’s blog</a><br><em>Czech Republic banks</em>: <a href="https://docs.google.com/spreadsheets/d/1LI1Pk0IwAvD9FE4ShHIU8ajT_NvEtGxO0VFW4OR78TY/edit#gid=0" title="Banks &amp; HTTPS in the Czech Republic" target="_blank" rel="external">Google Docs document</a><br><em>Danish banks</em>: <a href="https://jamiemagee.co.uk/2015/05/06/do-you-want-bank-grade-ssl-danish-edition/" title="Jamie Magee - Do -you really want &quot;bank grade&quot; security in your SSL? Danish edition" target="_blank" rel="external">Jamie Magee’s blog</a><br> <small>- Seems like I wasn’t the only one interested in how the Danish banks fare. There is some overlap but Jamie Magee did test some banks that I have not.  </small><br><em>Dutch banks</em>: <a href="http://blog.robiii.nl/2015/05/do-you-really-want-bank-grade-security.html" title="RobIII - Do you really want &quot;bank grade&quot; security in your SSL? Dutch edition" target="_blank" rel="external">Rob Janssen’s blog</a><br><em>Israeli banks</em>: <a href="https://twitter.com/omervk/status/598957807862292482" title="Twitter - Omer van Kloeten: On the heels of.." target="_blank" rel="external">Tweet from Omer van Kloeten</a><br><em>Lithuanian banks</em>: <a href="https://docs.google.com/spreadsheets/d/1ggl-WkbnI3-zd3Rs4SkPIQnUt1I4Vg4vhRL_FQwC7us/edit#gid=0" title="Banks in Lithuania" target="_blank" rel="external">Google Docs document</a><br><em>South African banks</em>: <a href="http://www.greenman.co.za/blog/?p=1734" title="Neverness - South African Banks SSL Security" target="_blank" rel="external">Ian Gilfillian’s blog</a> &amp; <a href="https://brutaldev.com/post/bank-grade-security---south-african-bank-edition" title="Brutal Developer - Bank Grade Security - South African bank edition" target="_blank" rel="external">Werner van Deventer’s blog</a><br><em>UK banks</em>: <a href="http://blog.wilka.co.uk/2015/05/06/uk-bank-ssl/" title="Magnetic Monkey - UK &#39;Bank Grade&#39; SSL" target="_blank" rel="external">Wilka Hudson’s blog</a>  </p>
<!-- Bibliography -->
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A few days ago, Troy Hunt published a &lt;a href=&quot;http://www.troyhunt.com/2015/05/do-you-really-want-bank-grade-security.html&quot; title=&quot;TroyHu
    
    </summary>
    
    
      <category term="Security" scheme="http://blog.m-a-v.dk/tags/Security/"/>
    
      <category term="SSL" scheme="http://blog.m-a-v.dk/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>C# Language Weirdness</title>
    <link href="http://blog.m-a-v.dk/2015/02/07/Csharp-Language-Weirdness/"/>
    <id>http://blog.m-a-v.dk/2015/02/07/Csharp-Language-Weirdness/</id>
    <published>2015-02-06T23:00:00.000Z</published>
    <updated>2016-08-15T17:47:25.688Z</updated>
    
    <content type="html"><![CDATA[<p>When using and learning about a programming language you are bound to, at some point, learn about some oddities in the programming language. Recently, I (once again) stumbled across the <em><a href="http://stackoverflow.com/q/194484/1401257" title="What&#39;s the strangest corner case you&#39;ve seen in C# or .NET?" target="_blank" rel="external">What’s the strangest corner case you’ve seen in C# or .NET?</a></em> question on <a href="http://stackoverflow.com" title="StackOverflow" target="_blank" rel="external">StackOverflow</a> and I thought I would compile a list of some, of what I consider to be, surprising “features” of the C# <em>language</em>.</p>
<p>So here goes (in no particular order).</p>
<h2 id="1-Comparison-of-nullable-types"><a href="#1-Comparison-of-nullable-types" class="headerlink" title="1. Comparison of nullable types"></a>1. Comparison of nullable types</h2><p>We all know about C#’s <a href="https://msdn.microsoft.com/en-us/library/1t3y8s4s.aspx" title="Nullable Types (C# Programming Guide)" target="_blank" rel="external">Nullable Value Types</a>, but what happens when we compare them? </p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span>? nonNull = <span class="number">1</span>, isNull = <span class="literal">null</span>;</div><div class="line"></div><div class="line">nonNull == isNull   <span class="comment">// False - Makes sense</span></div><div class="line">isNull == <span class="literal">null</span>      <span class="comment">// True - Makes sense</span></div><div class="line">nonNull == nonNull  <span class="comment">// True - Makes sense</span></div><div class="line">isNull &lt; <span class="literal">null</span>       <span class="comment">// False - Makes sense</span></div><div class="line">isNull &lt;= <span class="literal">null</span>      <span class="comment">// False - Make.. Wait what? </span></div><div class="line">isNull &lt;= isNull    <span class="comment">// False - ...</span></div></pre></td></tr></table></figure>
<p>For some (unknown to me) reason, comparing two nullable value types (whose value is null) with <code>&lt;=</code> evaluate to false. It is false even though comparing with <code>==</code> evaluate to true. </p>
<p>So apparently, a null nullable value type is <em>equal</em> to null, but it is not <em>below or equal</em> to null. </p>
<h2 id="2-Enums-and-method-overloading"><a href="#2-Enums-and-method-overloading" class="headerlink" title="2. Enums and method overloading"></a>2. Enums and method overloading</h2><p>Let’s assume we have this enum and these methods</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">enum</span> SomeEnum &#123; One = <span class="number">1</span> &#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">string</span> <span class="title">MyMethod</span>(<span class="params">SomeEnum myEnum</span>) </span>&#123; <span class="keyword">return</span> <span class="string">"ENUM"</span>; &#125;</div><div class="line"><span class="function"><span class="keyword">string</span> <span class="title">MyMethod</span>(<span class="params"><span class="keyword">object</span> myObject</span>) </span>&#123; <span class="keyword">return</span> <span class="string">"OBJECT"</span>; &#125;</div></pre></td></tr></table></figure>
<p>And then we call those methods a few times and look at the response</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">MyMethod(SomeEnum.One)        <span class="comment">// "ENUM" - Obviously.</span></div><div class="line">MyMethod(<span class="string">"Some string"</span>)       <span class="comment">// "OBJECT" - Obviously.</span></div><div class="line">MyMethod(<span class="number">0</span>)                   <span class="comment">// "ENUM" - Okay..</span></div><div class="line">MyMethod(Convert.ToInt32(<span class="number">0</span>))  <span class="comment">// "OBJECT" - Ehm..</span></div><div class="line">MyMethod(<span class="number">1</span>)                   <span class="comment">// "OBJECT" - What?</span></div></pre></td></tr></table></figure>
<p>What is the significance of 0 vs 1? </p>
<p>The default value of an enum is the default value of its underlying type (in this case an integer), which is 0. In fact, since an enum’s underlying type can only be integral types (except char), the default value for all enums is 0. Because of the way this is handled, 0 (as the only value) can be implicitly converted to any enum, which is why 0 and 1 does not call the same overload.<br>The reason why <code>Convert.ToInt32(0)</code> also calls the <code>object</code> overload is because <a href="https://msdn.microsoft.com/en-us/library/aa691336%28v=vs.71%29.aspx" title="7.4.2 Overload resolution" target="_blank" rel="external">overload resolution</a> happens at compile time, but the value returned from <code>Convert.ToInt32(0)</code> is not known by the compiler.</p>
<h2 id="3-Default-parameter-values-and-overloading"><a href="#3-Default-parameter-values-and-overloading" class="headerlink" title="3. Default parameter values and overloading"></a>3. Default parameter values and overloading</h2><p>This time we have the following classes:</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> <span class="title">Base</span></div><div class="line">&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">string</span> <span class="title">MyMethod</span>(<span class="params"><span class="keyword">int</span> i = <span class="number">1</span></span>)</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> i + <span class="string">" Base"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">class</span> <span class="title">Derived</span> : <span class="title">Base</span></div><div class="line">&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="title">MyMethod</span>(<span class="params"><span class="keyword">int</span> i = <span class="number">2</span></span>)</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> i + <span class="string">" Derived"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>What is the result of the following invocation of <code>MyMethod</code>?</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Base b = <span class="keyword">new</span> Derived();</div><div class="line">b.MyMethod();  <span class="comment">// ??</span></div></pre></td></tr></table></figure>
<p>There are two obvious possibilities: <em>“1 Base”</em> and <em>“2 Derived”</em>. Anyone who knows about method overriding in C#, will probably quickly figure out that it is the <code>MyMethod</code> from <code>Derived</code> that is being called. This might cause many people to think that the result will be <em>“2 Derived”</em>.<br>Would you be surprised if I tell you that the result is <em>“1 Derived”</em>? The default value from the base class method is being used, even though it is the subclass’s method that is being called.</p>
<p>Once again, it is a compile time vs run-time issue. Default parameter values are resolved at compile time while method override resolution is handled at run-time. </p>
<p><br><br>That was a few cases that surprised me a bit when I learned about them. I might add more at some point. Until then, if you are interested, you can probably find more C# weirdness through Google. </p>
<!-- Bibliography -->
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;When using and learning about a programming language you are bound to, at some point, learn about some oddities in the programming langua
    
    </summary>
    
      <category term="C#" scheme="http://blog.m-a-v.dk/categories/C/"/>
    
    
      <category term="C#" scheme="http://blog.m-a-v.dk/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Kill the bug! Don&#39;t hide it</title>
    <link href="http://blog.m-a-v.dk/2014/10/29/Kill-the-bug-not-the-symptom/"/>
    <id>http://blog.m-a-v.dk/2014/10/29/Kill-the-bug-not-the-symptom/</id>
    <published>2014-10-28T23:00:00.000Z</published>
    <updated>2016-08-15T17:44:42.581Z</updated>
    
    <content type="html"><![CDATA[<p>Once or twice¹ in a developers life, will (s)he find a bug in an application (s)he is developing. It happens and it’s (often) not that big of a deal. Most developers know that detecting and fixing bugs early is a shared responsibility, so few people will think less of the developer who committed the bug. What matters is how you fix it!</p>
<p>Whenever you have a bug in your application that you deem important enough to fix, you should do it right. You can probably get away with a quick hack to quickly make your clients happy, but at some point you should return and fix it properly! Once in a while (often actually) I see people “fix” a bug, but what they are really doing is hiding it (and that is rarely a good thing).</p>
<p>Let’s say that one day you look through your error log and see that your application is throwing a lot of <code>NullReferenceExceptions</code> (or whatever the equivalent is in your programming language). From the stacktrace you can see it is happening in this function and the reason is that <code>fancyObject</code> is null.</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DoSomething</span>(<span class="params"><span class="keyword">string</span> someString, SomeObject fancyObject, <span class="keyword">int</span> aNumber</span>)</span></div><div class="line">&#123;</div><div class="line">	<span class="comment">/*... some code ...*/</span></div><div class="line">	fancyObject.InvokingMethod();</div><div class="line">	<span class="comment">/*... some more code ...*/</span></div><div class="line">&#125;</div><div class="line"></div></pre></td></tr></table></figure>
<p>You have an important business meeting, so you ask you colleague (let’s call him Carl John Johnson) to fix it. When you return from the meeting, Carl is happy to tell you that he fixed the bug with a simple and elegant solution, as can be seen here:</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DoSomething</span>(<span class="params"><span class="keyword">string</span> someString, SomeObject fancyObject, <span class="keyword">int</span> aNumber</span>)</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(fancyObject == <span class="literal">null</span>) &#123; <span class="keyword">return</span>; &#125;</div><div class="line">	<span class="comment">/*... some code ...*/</span></div><div class="line">	fancyObject.InvokingMethod();</div><div class="line">	<span class="comment">/*... some more code ...*/</span></div><div class="line">&#125;</div><div class="line"></div></pre></td></tr></table></figure>
<p>The code no longer throws a <code>NullReferenceException</code>, we didn’t change the code much to fix this error, so surely this is a good fix. Right?</p>
<p>The problem with this “fix” is that it didn’t fix anything. It prevents the application from throwing an exception, so we can no longer see that there is an error in the error log. The bug is hidden from us and just waiting to escalate into something more serious. <em>Why was <code>fancyObject</code> null in the first place?</em> </p>
<p>Whenever <code>DoSomething</code> is called, the calling code expects <code>DoSomething</code> to <em>actually do something</em>. With Carl’s fix, we can no longer be sure that that something is being done. Worse, we are not being told whether it is being done or not. Carl shouldn’t have tried to fix the error in this method. If he must do something to it I think he (probably) should have added <em>guard clauses</em>. </p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DoSomething</span>(<span class="params"><span class="keyword">string</span> someString, SomeObject fancyObject, <span class="keyword">int</span> aNumber</span>)</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(someString == <span class="literal">null</span>) &#123; <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="string">"someString"</span>); &#125;</div><div class="line">	<span class="keyword">if</span>(fancyObject == <span class="literal">null</span>) &#123; <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="string">"fancyObject"</span>); &#125;</div><div class="line">	<span class="comment">/*... the rest of the method ...*/</span></div><div class="line">&#125;</div><div class="line"></div></pre></td></tr></table></figure>
<p><em>But.. This doesn’t fix the issue? It just causes different exception to be thrown. Why is this useful?</em> Because now the error we get is more meaningful. We are failing earlier and closer to the actual issue and it is a little bit clearer what happened. We still don’t know why <code>fancyObject</code> is null, but we know that the issue is <em>not in this method</em>. The guard clauses clearly states that this method is not supposed to be called with null objects, so we need to figure out why it is. When we figure out why <code>fancyObject</code> is null, we find the real issue and we can take appropriate action (and thereby avoid calling <code>DoSomething</code> in the first place.)</p>
<p>There is a million reasons why <code>fancyObject</code> could be null and it doesn’t really matter why it is (for this example). The point is, you should always try to track down the <em>source</em> of an issue and see if you can fix it from there. Don’t hide the error as Carl John Johnson did and think everything is dandy. <strong>Try to fix the code properly!</strong></p>
<p>These kind of fixes typically happens when we notice the issue far away from where the problem actually is. This is one of the reasons I’m a fan of <a href="http://www.martinfowler.com/ieeeSoftware/failFast.pdf" title="Fail Fast - Jim Shore" target="_blank" rel="external">failing fast</a>, where we try to force ourselves to notice (or force the application to tell us about) an error close to where the issue actually is.</p>
<p>I am well aware that sometimes these kind of fixes might actually be the right way to go. The problem is that sometimes it seems these kinds of fixes are the default solution. There is a very good chance that at some point you will have to fix the issue anyways, so why not fix it as early as possible? </p>
<ul>
<li><ol>
<li>Roughly..</li>
</ol>
</li>
</ul>
<!-- Bibliography -->
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Once or twice¹ in a developers life, will (s)he find a bug in an application (s)he is developing. It happens and it’s (often) not that bi
    
    </summary>
    
      <category term="Programming" scheme="http://blog.m-a-v.dk/categories/Programming/"/>
    
    
  </entry>
  
  <entry>
    <title>Shout-out to &#39;Any()&#39;</title>
    <link href="http://blog.m-a-v.dk/2014/09/08/Shoutout-to-Any/"/>
    <id>http://blog.m-a-v.dk/2014/09/08/Shoutout-to-Any/</id>
    <published>2014-09-07T22:00:00.000Z</published>
    <updated>2016-08-15T17:41:50.160Z</updated>
    
    <content type="html"><![CDATA[<p>I will use this first post to remind whoever reads this about a useful method in the <em>System.Linq</em> namespace in .NET.  I’m talking about <a href="http://msdn.microsoft.com/en-us/library/bb337697.aspx" title="MSDN: Enumerable.Any&lt;TSource&gt; Method (IEnumerable&lt;TSource&gt;)" target="_blank" rel="external"><code>IEnumerable&lt;T&gt;.Any&lt;T&gt;()</code></a> (and let’s not forget its <a href="http://msdn.microsoft.com/en-us/library/bb534972.aspx" title="MSDN: Enumerable.Any&lt;TSource&gt; Method (IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)" target="_blank" rel="external">overload</a> - I will refer to both as <code>Any()</code> throughout this post).</p>
<p>For those who don’t know what that method does (and can’t guess it based on its name), here is what the documentation has to say:</p>
<blockquote>
<p><em>Determines whether a sequence contains any elements.</em></p>
</blockquote>
<p>And for the overload:</p>
<blockquote>
<p><em>Determines whether any element of a sequence satisfies a condition.</em></p>
</blockquote>
<p>For some reason this method is often forgotten (or at least not used when it could have been), which result in code like this:</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">someSequence.Count() &gt; <span class="number">0</span></div><div class="line">someSequence.FirstOrDefault() != <span class="literal">null</span> </div><div class="line">someSequence.Count(x =&gt; x.SomeCondition) &gt; <span class="number">0</span></div><div class="line">someSequence.Where(x =&gt; x.SomeCondition).Count() == <span class="number">0</span></div></pre></td></tr></table></figure>
<p>and more like those. I typically see these used as the condition to an if-statement. </p>
<p>If <code>Any()</code> was used instead it would look like this: </p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">someSequence.Any()</div><div class="line">someSequence.Any()</div><div class="line">someSequence.Any(x =&gt; x.SomeCondition)</div><div class="line">!someSequence.Any(x =&gt; x.SomeCondition)</div></pre></td></tr></table></figure>
<p>Isn’t that simpler? (Some might like <a href="http://msdn.microsoft.com/en-us/library/vstudio/bb548541(v=vs.110).aspx" title="MSDN: Enumerable.All&lt;TSource&gt; Method" target="_blank" rel="external"><code>All&lt;T&gt;(..)</code></a> better for the 4th one. But still..)</p>
<p>By using <code>Any()</code> the code clearly tells the reader that we are only interested in whether the sequence contains any elements (or contains any elements that satisfy a condition). It shows <em>intent</em>.</p>
<p><code>Any()</code> might also provide a performance increase compared to <code>Count()</code>. <code>Count()</code> is optimized when applied to a collection implementing the <code>ICollection</code> or <code>ICollection&lt;T&gt;</code> interface (in those cases it uses the property <code>Count</code> that is assumed to be faster). But if you have a sequence that do not implement either of those interfaces, <code>Count()</code> will go through <em>each element</em> in the sequence in order to count them. So if you have a very big sequence <code>Count()</code> might take quite a long time to execute, whereas <code>Any()</code> just have to see if there is an element (the overload of <code>Any()</code> that accepts a predicate might have to through all the items - but only if no elements in the sequence satisfy the predicate). </p>
<p>So unless you have a good reason <em>not</em> to use <code>Any()</code> I endorse you to use it. </p>
<!-- Bibliography -->
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I will use this first post to remind whoever reads this about a useful method in the &lt;em&gt;System.Linq&lt;/em&gt; namespace in .NET.  I’m talking
    
    </summary>
    
      <category term="Programming" scheme="http://blog.m-a-v.dk/categories/Programming/"/>
    
    
      <category term="C#" scheme="http://blog.m-a-v.dk/tags/C/"/>
    
      <category term=".NET" scheme="http://blog.m-a-v.dk/tags/NET/"/>
    
  </entry>
  
</feed>
